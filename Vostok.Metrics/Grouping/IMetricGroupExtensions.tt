<#@ include file="./../CodeGeneration/CodeGenerationCommon.ttinclude" once="true" #>
<#@ include file="./../CodeGeneration/MetricGroupConstants.ttinclude" once="true" #>
using JetBrains.Annotations;

namespace Vostok.Metrics.Grouping
{
    [PublicAPI]
    public static class IMetricGroupExtensions
    {
<# for (int iface = 1; iface <= DynamicTags_StringKeys_MaxKeyCount; iface++) { #>
        /// <inheritdoc cref="IMetricGroup<#= iface #>{TMetric}.For"/>
        [NotNull]
        public static TMetric For<TMetric, <#= FormatParameters("TValue{0}", iface) #>>([NotNull] this IMetricGroup<#= iface #><TMetric> metric, <#= FormatParameters("[NotNull] TValue{0} value{0}", iface) #>)
            => metric.For(<#= FormatParameters("ToString(value{0})", iface) #>);

<# } #>
        private static string ToString<T>(T value)
        {
            var result = value?.ToString();
            
            if (string.IsNullOrEmpty(result))
                return "none";

            return result;
        }
    }
}